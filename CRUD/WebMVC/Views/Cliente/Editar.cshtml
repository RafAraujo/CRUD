@model WebMVC.ViewModels.ClienteViewModel

@{
    ViewBag.Title = "Index";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form">
    <div class="row mt-3 mb-3">
        <div class="col">
            <h4>Cliente</h4>
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.Partial("_DadosCliente", Model)

    <div class="row mb-3">
        <div class="col text-center">
            @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-secondary btn-lg" })
            <input type="submit" value="Salvar" class="btn btn-primary btn-lg" />
        </div>
    </div>

    @Html.Partial("_AlertaMensagem")
</div>
}

<script>
    window.addEventListener("DOMContentLoaded", (event) => {
        configElements();
    });

    function configElements() {
        IMask(document.getElementById("@Html.IdFor(m => m.Cpf)"), { mask: "000.000.000-00" });
        IMask(document.getElementById("@Html.IdFor(m => m.Rg)"), { mask: "00.000.000-*", prepareChar: str => str.toUpperCase() });
        configDate(document.getElementById("@Html.IdFor(m => m.DataExpedicao)"));
        configDate(document.getElementById("@Html.IdFor(m => m.DataNascimento)"));
        IMask(document.getElementById("@Html.IdFor(m => m.Endereco.Cep)"), { mask: "00000-000" });
    }

    function configDate(element) {
        let minDate = new Date();
        let maxDate = new Date();

        minDate.setFullYear(minDate.getFullYear() - 150);

        element.setAttribute("type", "date");
        element.setAttribute("min", minDate.toISOString().split("T")[0]);
        element.setAttribute("max", maxDate.toISOString().split("T")[0]);
    }
</script>
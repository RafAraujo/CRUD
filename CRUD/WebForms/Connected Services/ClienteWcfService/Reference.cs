//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebForm.ClienteWcfService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClienteWcfService.IClienteWcfService")]
    public interface IClienteWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteWcfService/ObterClientes", ReplyAction="http://tempuri.org/IClienteWcfService/ObterClientesResponse")]
        Domain.Models.Cliente[] ObterClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteWcfService/ObterClientes", ReplyAction="http://tempuri.org/IClienteWcfService/ObterClientesResponse")]
        System.Threading.Tasks.Task<Domain.Models.Cliente[]> ObterClientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteWcfService/ObterCliente", ReplyAction="http://tempuri.org/IClienteWcfService/ObterClienteResponse")]
        Domain.Models.Cliente ObterCliente(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteWcfService/ObterCliente", ReplyAction="http://tempuri.org/IClienteWcfService/ObterClienteResponse")]
        System.Threading.Tasks.Task<Domain.Models.Cliente> ObterClienteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteWcfService/AdicionarCliente", ReplyAction="http://tempuri.org/IClienteWcfService/AdicionarClienteResponse")]
        Domain.Models.Cliente AdicionarCliente(Domain.Models.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteWcfService/AdicionarCliente", ReplyAction="http://tempuri.org/IClienteWcfService/AdicionarClienteResponse")]
        System.Threading.Tasks.Task<Domain.Models.Cliente> AdicionarClienteAsync(Domain.Models.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteWcfService/EditarCliente", ReplyAction="http://tempuri.org/IClienteWcfService/EditarClienteResponse")]
        Domain.Models.Cliente EditarCliente(Domain.Models.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteWcfService/EditarCliente", ReplyAction="http://tempuri.org/IClienteWcfService/EditarClienteResponse")]
        System.Threading.Tasks.Task<Domain.Models.Cliente> EditarClienteAsync(Domain.Models.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteWcfService/ExcluirCliente", ReplyAction="http://tempuri.org/IClienteWcfService/ExcluirClienteResponse")]
        void ExcluirCliente(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteWcfService/ExcluirCliente", ReplyAction="http://tempuri.org/IClienteWcfService/ExcluirClienteResponse")]
        System.Threading.Tasks.Task ExcluirClienteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClienteWcfServiceChannel : WebForm.ClienteWcfService.IClienteWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClienteWcfServiceClient : System.ServiceModel.ClientBase<WebForm.ClienteWcfService.IClienteWcfService>, WebForm.ClienteWcfService.IClienteWcfService {
        
        public ClienteWcfServiceClient() {
        }
        
        public ClienteWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClienteWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClienteWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClienteWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Domain.Models.Cliente[] ObterClientes() {
            return base.Channel.ObterClientes();
        }
        
        public System.Threading.Tasks.Task<Domain.Models.Cliente[]> ObterClientesAsync() {
            return base.Channel.ObterClientesAsync();
        }
        
        public Domain.Models.Cliente ObterCliente(int id) {
            return base.Channel.ObterCliente(id);
        }
        
        public System.Threading.Tasks.Task<Domain.Models.Cliente> ObterClienteAsync(int id) {
            return base.Channel.ObterClienteAsync(id);
        }
        
        public Domain.Models.Cliente AdicionarCliente(Domain.Models.Cliente cliente) {
            return base.Channel.AdicionarCliente(cliente);
        }
        
        public System.Threading.Tasks.Task<Domain.Models.Cliente> AdicionarClienteAsync(Domain.Models.Cliente cliente) {
            return base.Channel.AdicionarClienteAsync(cliente);
        }
        
        public Domain.Models.Cliente EditarCliente(Domain.Models.Cliente cliente) {
            return base.Channel.EditarCliente(cliente);
        }
        
        public System.Threading.Tasks.Task<Domain.Models.Cliente> EditarClienteAsync(Domain.Models.Cliente cliente) {
            return base.Channel.EditarClienteAsync(cliente);
        }
        
        public void ExcluirCliente(int id) {
            base.Channel.ExcluirCliente(id);
        }
        
        public System.Threading.Tasks.Task ExcluirClienteAsync(int id) {
            return base.Channel.ExcluirClienteAsync(id);
        }
    }
}
